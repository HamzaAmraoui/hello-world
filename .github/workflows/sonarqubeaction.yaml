name: "Bad Pipeline"

on:  
  push:
    branches:
       - main
  workflow_dispatch:
    inputs:
      entornos:
        description: "En que entorno lo quieres desplegar??"
        required: true
        default: dev
        type: choice
        options:
          - production
          - desarrollo

jobs:  
  build:    
    runs-on: ubuntu-latest
    env: 
      DB_USER_DEV: ${{ secrets.USERNAME }}
      DB_PASS_DEV: ${{ secrets.PASSWORD }}
      API_KEY_DEV: ${{ secrets.APIKEY }}    
    steps:
      - name: Checkout código        
        uses: actions/checkout@v3

      - name: Instalando hackaton cli y dependencias      
        run: | 
          echo "sudo apt update"          
          echo "sudo apt install -y hackaton"          
          echo "hackaton install"  

      - name: "Aplicando configuraciones necesarias"
        run: |  
          sudo apt-get update -y && sudo apt-get install -y nginx curl
          sudo ufw allow 'Nginx Full' && sudo ufw enable
          sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/backup
          sudo mkdir -p /var/www/app
          sudo sed -i 's/root \/var\/www\/html;/root \/var\/www\/app;/' /etc/nginx/sites-available/default
          sudo chmod -R 755 /var/www/app
          sudo chown -R www-data:www-data /var/www/app
          sudo systemctl restart nginx

      - name: Construir aplicacion
        run: echo  "hackaton run build"

      - name: "Ejecutando análisis de SonarQube"
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}       
          SONAR_HOST_URL: 'http://localhost:9000/sonarqube'
      - name: "Probando aplicación"
        run:  echo "hackaton test"

      - name: Guardar artefacto 
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./hackaton/

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    env: 
      DB_USER_DEV: ${{ secrets.USERNAME }}
      DB_PASS_DEV: ${{ secrets.PASSWORD }}
      API_KEY_DEV: ${{ secrets.APIKEY }}  
    if: ${{ github.event.inputs.entornos == 'desarrollo' }}
    steps:  
    - name: Guardar artefacto 
      uses: actions/download-artifact@v4
      with:
            name: build-artifact
            path: ./hackaton/
        
    - name: Desplegando aplicación en DEV...
      run: echo " bash ./deploy.sh DEV "

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: ${{ github.event.inputs.entornos == 'production' }}
    steps:
      - name: Guardar artefacto 
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./hackaton/

      - name: Desplegando aplicación en PROD...
        run: echo " bash ./deploy.sh PROD " 
        
      - name: Terminando proceso
        run:  echo "🚀 Despliegue completado en desarrollo y producción"
